name: Load test

on:
  push:
    paths:
      - '.github/workflows/load-test.yml'  # Trigger on changes to this workflow file
  #     - 'dotnet.FakeStoreIngestor/**'  # Trigger on changes in the dotnet.FakeStoreIngestor directory
  #     - '.github/workflows/fake-store-ingestor-dockerize.yml'  # Trigger on changes to this workflow file
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  load-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: fakestore
          MYSQL_USER: appuser
          MYSQL_PASSWORD: apppass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -prootpass"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

      fakestore-mock:
        image: ghcr.io/${{ github.repository_owner }}/fakestore-mock:latest
        ports:
          - 3000:3000
        options: >-
          --health-cmd="wget -qO- http://localhost:3000/products > /dev/null || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20
          --health-start-period=10s

      fakestore-api:
        image: ghcr.io/${{ github.repository_owner }}/fakestore-api:latest
        env:
          ASPNETCORE_URLS: http://0.0.0.0:5171
          # ConnectionStrings__Default: Server=127.0.0.1;Port=3306;Database=fakestore;User=appuser;Password=apppass;TreatTinyAsBoolean=false;DefaultCommandTimeout=30
          ConnectionStrings__Default: Server=mysql;Port=3306;Database=fakestore;User=appuser;Password=apppass;TreatTinyAsBoolean=false;DefaultCommandTimeout=30
          Ingest__BaseUrl: "http://fakestore-mock:3000/"
          Ingest__ProductsEndpoint: "products"
        ports:
          - 5171:5171
        options: >-
          --health-cmd="curl -f http://localhost:5171/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for MySQL
        run: |
          for i in {1..40}; do
            if mysqladmin ping -h127.0.0.1 -P3306 -uappuser -papppass --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
            if [ $i -eq 40 ]; then
              echo "MySQL failed to start"
              exit 1
            fi
          done

      - name: Wait for Mock Service
        run: |
          for i in {1..40}; do
            if curl -sf http://localhost:3000/products >/dev/null; then
              echo "Mock service is up!"
              break
            fi
            echo "Waiting for mock service..."
            sleep 2
            if [ $i -eq 40 ]; then
              echo "fakestore-mock failed to start; printing container logs"
              docker logs fakestore-mock || true
              exit 1
            fi
          done

      # Run API container on host network so it can reach mysql+mock via localhost
      - name: Wait for API
        run: |
          # Wait for API health
          for i in {1..40}; do
            if curl -sf http://localhost:5171/health > /dev/null; then
              echo "API is up!"
              break
            fi
            echo "Waiting for API..."
            sleep 2
            if [ $i -eq 40 ]; then
              echo "API failed to start; printing container logs"
              docker logs fakestore-api || true
              exit 1
            fi
          done

      - name: Import first 5
        run: |
          curl -sS -X POST 'http://localhost:5171/import/5' -H 'accept: */*'

      - name: Read one
        run: |
          curl -sS 'http://localhost:5171/products/1' | jq . || true

      - name: List all
        run: |
          curl -sS 'http://localhost:5171/products' | jq '.[0:5]' || true

      - name: Stop containers & processes
        if: always()
        run: |
          kill $(cat mock.pid) || true
